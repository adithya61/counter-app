{"ast":null,"code":"var _jsxFileName = \"/Users/zonic/counter-app/src/components/counter.jsx\";\nimport React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Counter extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      count: 0,\n      tags: ['tag1', 'tag2', 'tag3']\n    };\n  }\n\n  render() {\n    let badgeColor = this.getBadgeColor();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: this.getBadgeColor(),\n        children: this.formatCount()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-secondary\",\n        children: \"Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), \"ul\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this);\n  }\n\n  getBadgeColor() {\n    let badgeColor = 'badge m-2 bg-';\n    badgeColor += this.state.count == 0 ? 'warning' : 'primary';\n    return badgeColor;\n  }\n\n  formatCount() {\n    const {\n      count\n    } = this.state;\n    return count === 0 ? \"Zero\" : count;\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["/Users/zonic/counter-app/src/components/counter.jsx"],"names":["React","Component","Counter","state","count","tags","render","badgeColor","getBadgeColor","formatCount"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,sCAAP;;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC9BE,KAD8B,GACtB;AACNC,MAAAA,KAAK,EAAE,CADD;AAENC,MAAAA,IAAI,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB;AAFA,KADsB;AAAA;;AAM9BC,EAAAA,MAAM,GAAG;AAEP,QAAIC,UAAU,GAAG,KAAKC,aAAL,EAAjB;AAEA,wBACE;AAAA,8BACE;AAAM,QAAA,SAAS,EAAE,KAAKA,aAAL,EAAjB;AAAA,kBAAyC,KAAKC,WAAL;AAAzC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,SAAS,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AAEDD,EAAAA,aAAa,GAAG;AACd,QAAID,UAAU,GAAG,eAAjB;AACAA,IAAAA,UAAU,IAAI,KAAKJ,KAAL,CAAWC,KAAX,IAAoB,CAApB,GAAwB,SAAxB,GAAoC,SAAlD;AACA,WAAOG,UAAP;AACD;;AAEDE,EAAAA,WAAW,GAAG;AACZ,UAAM;AAAEL,MAAAA;AAAF,QAAY,KAAKD,KAAvB;AAEA,WAAOC,KAAK,KAAK,CAAV,GAAc,MAAd,GAAuBA,KAA9B;AACD;;AA7B6B;;AAgChC,eAAeF,OAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nclass Counter extends Component {\n  state = {\n    count: 0,\n    tags: ['tag1', 'tag2', 'tag3']\n  };\n\n  render() {\n\n    let badgeColor = this.getBadgeColor();\n\n    return (\n      <div>\n        <span className={this.getBadgeColor()}>{ this.formatCount() }</span>\n        <button className=\"btn btn-secondary\">Increment</button>\n        ul\n      </div>\n    );\n  }\n\n  getBadgeColor() {\n    let badgeColor = 'badge m-2 bg-';\n    badgeColor += this.state.count == 0 ? 'warning' : 'primary';\n    return badgeColor;\n  }\n\n  formatCount() {\n    const { count } = this.state;\n\n    return count === 0 ? \"Zero\" : count;\n  }\n}\n\nexport default Counter;"]},"metadata":{},"sourceType":"module"}