{"ast":null,"code":"var _jsxFileName = \"/Users/zonic/counter-app/src/components/counter.jsx\";\nimport React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Counter extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      count: 0,\n      tags: [\"tag1\", \"tag2\", \"tag3\"]\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: this.getBadgeColor(),\n        children: this.formatCount()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleIncrement,\n        className: \"btn btn-secondary\",\n        children: \"Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this);\n  } // get badge color corresponding to the count property in state object\n\n\n  getBadgeColor() {\n    let badgeColor = \"badge m-2 bg-\";\n    badgeColor += this.state.count == 0 ? \"warning\" : \"primary\";\n    return badgeColor;\n  } //  display string literal zero or the count based on the object state in the component.\n\n\n  formatCount() {\n    const {\n      count\n    } = this.state;\n    return count === 0 ? \"Zero\" : count;\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["/Users/zonic/counter-app/src/components/counter.jsx"],"names":["React","Component","Counter","state","count","tags","render","getBadgeColor","formatCount","handleIncrement","badgeColor"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,sCAAP;;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAE9BE,KAF8B,GAEtB;AACNC,MAAAA,KAAK,EAAE,CADD;AAENC,MAAAA,IAAI,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB;AAFA,KAFsB;AAAA;;AAO9BC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BAEE;AAAM,QAAA,SAAS,EAAE,KAAKC,aAAL,EAAjB;AAAA,kBAAwC,KAAKC,WAAL;AAAxC;AAAA;AAAA;AAAA;AAAA,cAFF,eAIE;AAAQ,QAAA,OAAO,EAAEC,eAAjB;AAAkC,QAAA,SAAS,EAAC,mBAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAQD,GAhB6B,CAkB9B;;;AACAF,EAAAA,aAAa,GAAG;AACd,QAAIG,UAAU,GAAG,eAAjB;AACAA,IAAAA,UAAU,IAAI,KAAKP,KAAL,CAAWC,KAAX,IAAoB,CAApB,GAAwB,SAAxB,GAAoC,SAAlD;AACA,WAAOM,UAAP;AACD,GAvB6B,CAyB9B;;;AACAF,EAAAA,WAAW,GAAG;AACZ,UAAM;AAAEJ,MAAAA;AAAF,QAAY,KAAKD,KAAvB;AAEA,WAAOC,KAAK,KAAK,CAAV,GAAc,MAAd,GAAuBA,KAA9B;AACD;;AA9B6B;;AAiChC,eAAeF,OAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nclass Counter extends Component {\n  // stores important values of the component.\n  state = {\n    count: 0,\n    tags: [\"tag1\", \"tag2\", \"tag3\"],\n  };\n\n  render() {\n    return (\n      <div>\n        {/* dynamically rendering className */}\n        <span className={this.getBadgeColor()}>{this.formatCount()}</span>\n\n        <button onClick={handleIncrement} className=\"btn btn-secondary\">Increment</button>\n      </div>\n    );\n  }\n\n  // get badge color corresponding to the count property in state object\n  getBadgeColor() {\n    let badgeColor = \"badge m-2 bg-\";\n    badgeColor += this.state.count == 0 ? \"warning\" : \"primary\";\n    return badgeColor;\n  }\n\n  //  display string literal zero or the count based on the object state in the component.\n  formatCount() {\n    const { count } = this.state;\n\n    return count === 0 ? \"Zero\" : count;\n  }\n}\n\nexport default Counter;\n"]},"metadata":{},"sourceType":"module"}