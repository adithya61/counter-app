{"ast":null,"code":"var _jsxFileName = \"/Users/zonic/counter-app/src/components/counter.jsx\";\nimport React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Counter extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      count: 0,\n      tags: [\"tag1\", \"tag2\", \"tag3\"]\n    };\n\n    this.handleIncrement = () => {\n      this.setState({\n        count: this.state.count + 1\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: this.getBadgeColor(),\n        children: this.formatCount()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleIncrement,\n        className: \"btn btn-secondary\",\n        children: \"Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        width: \"16\",\n        height: \"16\",\n        fill: \"currentColor\",\n        class: \"bi bi-alarm\",\n        viewBox: \"0 0 16 16\",\n        children: [/*#__PURE__*/_jsxDEV(\"path\", {\n          d: \"M8.5 5.5a.5.5 0 0 0-1 0v3.362l-1.429 2.38a.5.5 0 1 0 .858.515l1.5-2.5A.5.5 0 0 0 8.5 9V5.5z\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n          d: \"M6.5 0a.5.5 0 0 0 0 1H7v1.07a7.001 7.001 0 0 0-3.273 12.474l-.602.602a.5.5 0 0 0 .707.708l.746-.746A6.97 6.97 0 0 0 8 16a6.97 6.97 0 0 0 3.422-.892l.746.746a.5.5 0 0 0 .707-.708l-.601-.602A7.001 7.001 0 0 0 9 2.07V1h.5a.5.5 0 0 0 0-1h-3zm1.038 3.018a6.093 6.093 0 0 1 .924 0 6 6 0 1 1-.924 0zM0 3.5c0 .753.333 1.429.86 1.887A8.035 8.035 0 0 1 4.387 1.86 2.5 2.5 0 0 0 0 3.5zM13.5 1c-.753 0-1.429.333-1.887.86a8.035 8.035 0 0 1 3.527 3.527A2.5 2.5 0 0 0 13.5 1z\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), \"      \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this);\n  } // get badge color corresponding to the count property in state object\n\n\n  getBadgeColor() {\n    let badgeColor = \"badge m-2 bg-\";\n    badgeColor += this.state.count == 0 ? \"warning\" : \"primary\";\n    return badgeColor;\n  } //  display string literal zero or the count based on the object state in the component.\n\n\n  formatCount() {\n    const {\n      count\n    } = this.state;\n    return count === 0 ? \"Zero\" : count;\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["/Users/zonic/counter-app/src/components/counter.jsx"],"names":["React","Component","Counter","state","count","tags","handleIncrement","setState","render","getBadgeColor","formatCount","badgeColor"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,sCAAP;;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAE9BE,KAF8B,GAEtB;AACNC,MAAAA,KAAK,EAAE,CADD;AAENC,MAAAA,IAAI,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB;AAFA,KAFsB;;AAAA,SAS9BC,eAT8B,GASZ,MAAM;AACtB,WAAKC,QAAL,CAAc;AAAEH,QAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,GAAmB;AAA5B,OAAd;AACD,KAX6B;AAAA;;AAa9BI,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BAEE;AAAM,QAAA,SAAS,EAAE,KAAKC,aAAL,EAAjB;AAAA,kBAAwC,KAAKC,WAAL;AAAxC;AAAA;AAAA;AAAA;AAAA,cAFF,eAIE;AAAQ,QAAA,OAAO,EAAE,KAAKJ,eAAtB;AAAuC,QAAA,SAAS,EAAC,mBAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAOE;AAAK,QAAA,KAAK,EAAC,4BAAX;AAAwC,QAAA,KAAK,EAAC,IAA9C;AAAmD,QAAA,MAAM,EAAC,IAA1D;AAA+D,QAAA,IAAI,EAAC,cAApE;AAAmF,QAAA,KAAK,EAAC,aAAzF;AAAuG,QAAA,OAAO,EAAC,WAA/G;AAAA,gCACN;AAAM,UAAA,CAAC,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,gBADM,eAEN;AAAM,UAAA,CAAC,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,gBAFM;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAaD,GA3B6B,CA6B9B;;;AACAG,EAAAA,aAAa,GAAG;AACd,QAAIE,UAAU,GAAG,eAAjB;AACAA,IAAAA,UAAU,IAAI,KAAKR,KAAL,CAAWC,KAAX,IAAoB,CAApB,GAAwB,SAAxB,GAAoC,SAAlD;AACA,WAAOO,UAAP;AACD,GAlC6B,CAoC9B;;;AACAD,EAAAA,WAAW,GAAG;AACZ,UAAM;AAAEN,MAAAA;AAAF,QAAY,KAAKD,KAAvB;AAEA,WAAOC,KAAK,KAAK,CAAV,GAAc,MAAd,GAAuBA,KAA9B;AACD;;AAzC6B;;AA4ChC,eAAeF,OAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nclass Counter extends Component {\n  // state: stores important values of the component.\n  state = {\n    count: 0,\n    tags: [\"tag1\", \"tag2\", \"tag3\"],\n  };\n\n  // Event Handler: use arrow function for handling event handlers as it inherits context from parent\n  // and hence count variable is accessible.\n  handleIncrement = () => {\n    this.setState({ count: this.state.count + 1 });\n  };\n\n  render() {\n    return (\n      <div>\n        {/* dynamically rendering className */}\n        <span className={this.getBadgeColor()}>{this.formatCount()}</span>\n\n        <button onClick={this.handleIncrement} className=\"btn btn-secondary\">\n          Increment\n        </button>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-alarm\" viewBox=\"0 0 16 16\">\n  <path d=\"M8.5 5.5a.5.5 0 0 0-1 0v3.362l-1.429 2.38a.5.5 0 1 0 .858.515l1.5-2.5A.5.5 0 0 0 8.5 9V5.5z\"/>\n  <path d=\"M6.5 0a.5.5 0 0 0 0 1H7v1.07a7.001 7.001 0 0 0-3.273 12.474l-.602.602a.5.5 0 0 0 .707.708l.746-.746A6.97 6.97 0 0 0 8 16a6.97 6.97 0 0 0 3.422-.892l.746.746a.5.5 0 0 0 .707-.708l-.601-.602A7.001 7.001 0 0 0 9 2.07V1h.5a.5.5 0 0 0 0-1h-3zm1.038 3.018a6.093 6.093 0 0 1 .924 0 6 6 0 1 1-.924 0zM0 3.5c0 .753.333 1.429.86 1.887A8.035 8.035 0 0 1 4.387 1.86 2.5 2.5 0 0 0 0 3.5zM13.5 1c-.753 0-1.429.333-1.887.86a8.035 8.035 0 0 1 3.527 3.527A2.5 2.5 0 0 0 13.5 1z\"/>\n</svg>      </div>\n    );\n  }\n\n  // get badge color corresponding to the count property in state object\n  getBadgeColor() {\n    let badgeColor = \"badge m-2 bg-\";\n    badgeColor += this.state.count == 0 ? \"warning\" : \"primary\";\n    return badgeColor;\n  }\n\n  //  display string literal zero or the count based on the object state in the component.\n  formatCount() {\n    const { count } = this.state;\n\n    return count === 0 ? \"Zero\" : count;\n  }\n}\n\nexport default Counter;\n"]},"metadata":{},"sourceType":"module"}